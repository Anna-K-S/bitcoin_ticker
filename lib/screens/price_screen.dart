import 'package:bitcoin_ticker/widgets/crypto_card.dart';
import 'package:bitcoin_ticker/service/api.dart';
import 'package:bitcoin_ticker/data/coin_data.dart';
import 'package:flutter/material.dart';
import '../widgets/android_dropdown.dart';
import '../widgets/ios_picker.dart';
import 'dart:io' show Platform;

class PriceScreen extends StatefulWidget {
  const PriceScreen({super.key});

  @override
  _PriceScreenState createState() => _PriceScreenState();
}

class _PriceScreenState extends State<PriceScreen> {
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã –∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã
  late Currency _selectedCurrency = _firstCurrency;
  late Crypto _selectedCrypto = _crypto;
  final _cryptos = Crypto.values;
  final _crypto = Crypto.values.first;
  final _firstCurrency = Currency.values.first;
  final _api = CoinApi();

  // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã
  Future<double> _getPrice() async {
    final result = await _api.getPrice();

  // –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç–æ–ª—å–∫–æ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç–µ
    final pricesByCurrency = result.rates
        .where(
          (element) =>
              element.assetIdQuote.toLowerCase() ==
              _selectedCurrency.name.toLowerCase(),
        )
        .toList();
        
    // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 0.0
    if (pricesByCurrency.isEmpty) return 0.0;

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—É—Ä—Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã(–≤ –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —Ç–æ–ª—å–∫–æ BTC) –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã
    return pricesByCurrency.first.rate;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('ü§ë Coin Ticker'),
      ),
      body: FutureBuilder(
        // –í—ã–∑—ã–≤–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ _getPrice(), —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫—É—Ä—Å
        future: _getPrice(),
        builder: (context, snapshot) {

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FutureBuilder
          if (!snapshot.hasData || snapshot.connectionState == ConnectionState.waiting) {

          // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—â–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã –∏–ª–∏ –æ–∂–∏–¥–∞—é—Ç—Å—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
            return const Center(
              child: CircularProgressIndicator(),
            );
          }

          // –í —Å–ª—É—á–∞–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –æ—à–∏–±–∫–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ–∫—Å—Ç 'Error'
          if (snapshot.hasError) {
            return const Center(
              child: Text('Error'),
            );
          }
          return Column(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: <Widget>[
              Column(
                crossAxisAlignment: CrossAxisAlignment.stretch,

                // '_cryptos' - —Å–ø–∏—Å–æ–∫ –∑–Ω–∞—á–µ–Ω–∏–π –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—è Crypto
                children: _cryptos

                // –ú–µ—Ç–æ–¥ 'take' –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 —ç–ª–µ–º–µ–Ω—Ç–∞ 
                    .take(3)

                    // –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
                    .map(

                      // –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –≤–∏–¥–∂–µ—Ç–∞ 'CryptoCard' –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ 'e'
                      (e) => CryptoCard(
                        selectedCurrency:

                        // –ü–µ—Ä–µ–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É—è snapshot.data, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –æ –∫—É—Ä—Å–∞—Ö, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ API
                        // –ú–µ—Ç–æ–¥ toStringAsFixed(2) –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è —á–∏—Å–ª–∞ –∫ –¥–≤—É–º –¥–µ—Å—è—Ç–∏—á–Ω—ã–º –∑–Ω–∞–∫–∞–º
                            '${snapshot.data!.toStringAsFixed(2)}  ${_selectedCurrency.name.toUpperCase()}',
                        selectedCrypto: e.name.toString().toUpperCase(),
                      ),
                    )
                    .toList(),
              ),
              Container(
                height: 150.0,
                alignment: Alignment.center,
                padding: const EdgeInsets.only(bottom: 30.0),
                color: Colors.lightBlue,
                //–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
                child: Platform.isIOS
                    ? IOSPicker(
                        selectedCurrency: _selectedCurrency,
                        onChanged: _onCurrencyChanged,
                      )
                    : AndroidDropdown(
                        selectedCurrency: _selectedCurrency,
                        onChanged: _onCurrencyChanged,
                      ),
              ),
            ],
          );
        },
      ),
    );
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã
  void _onCurrencyChanged(Currency? newCurrency) {
    setState(() {
      //–ø—Ä–æ–≤–µ—Ä—è–µ–º —è–≤–ª—è–µ—Ç—Å—è –ª–∏ 'newCurrency' null –æ–º
      _selectedCurrency = newCurrency ?? _selectedCurrency;
    });
  }
}
